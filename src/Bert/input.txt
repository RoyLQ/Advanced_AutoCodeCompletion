['[CLS]', 'regress-472450-04.js', 'VariableDeclarator', 'VariableDeclaration', 'Program', '[SEP]']
['[CLS]', '472450', 'VariableDeclarator', 'VariableDeclaration', 'Program', '[SEP]']
['[CLS]', 'TM: Do not assert: StackBase(fp) + blockDepth == regs.sp', 'VariableDeclarator', 'VariableDeclaration', 'Program', '[SEP]']
['[CLS]', '', 'VariableDeclarator', 'VariableDeclaration', 'Program', '[SEP]']
['[CLS]', '', 'VariableDeclarator', 'VariableDeclaration', 'Program', '[SEP]']
['[CLS]', 'test', 'CallExpression', 'ExpressionStatement', 'Program', '[SEP]']
['[CLS]', 'test', 'FunctionDeclaration', 'Program', '[SEP]']
['[CLS]', 'enterFunc', 'CallExpression', 'ExpressionStatement', 'BlockStatement', 'FunctionDeclaration', 'Program', '[SEP]']
['[CLS]', 'test', 'CallExpression', 'ExpressionStatement', 'BlockStatement', 'FunctionDeclaration', 'Program', '[SEP]']
['[CLS]', 'printBugNumber', 'CallExpression', 'ExpressionStatement', 'BlockStatement', 'FunctionDeclaration', 'Program', '[SEP]']
['[CLS]', 'BUGNUMBER', 'CallExpression', 'ExpressionStatement', 'BlockStatement', 'FunctionDeclaration', 'Program', '[SEP]']
['[CLS]', 'printStatus', 'CallExpression', 'ExpressionStatement', 'BlockStatement', 'FunctionDeclaration', 'Program', '[SEP]']
['[CLS]', 'summary', 'CallExpression', 'ExpressionStatement', 'BlockStatement', 'FunctionDeclaration', 'Program', '[SEP]']
['[CLS]', 'jit', 'CallExpression', 'ExpressionStatement', 'BlockStatement', 'FunctionDeclaration', 'Program', '[SEP]']
['[CLS]', 'true', 'CallExpression', 'ExpressionStatement', 'BlockStatement', 'FunctionDeclaration', 'Program', '[SEP]']
['[CLS]', 'âœ–', 'Identifier', 'LiteralString', 'CallExpression', 'ExpressionStatement', 'BlockStatement', 'FunctionDeclaration', 'Program', '[SEP]']
['[CLS]', '1', 'ArrayExpression', 'AssignmentExpression', 'Property', 'ObjectExpression', 'ExpressionStatement', 'BlockStatement', 'FunctionDeclaration', 'Program', '[SEP]']
['[CLS]', 'f', 'ExpressionStatement', 'BlockStatement', 'FunctionDeclaration', 'Program', '[SEP]']
['[CLS]', 'eval', 'Identifier', 'LiteralString', 'CallExpression', 'ExpressionStatement', 'BlockStatement', 'FunctionDeclaration', 'Program', '[SEP]']
['[CLS]', "for (var y = 0; y < 1; ++y) { for each (let z in [null, function(){}, null, '', null, '', null]) { let x = 1, c = []; } }", 'CallExpression', 'ExpressionStatement', 'BlockStatement', 'FunctionDeclaration', 'BlockStatement', 'FunctionDeclaration', 'Program', '[SEP]']
['[CLS]', 'f', 'CallExpression', 'ExpressionStatement', 'BlockStatement', 'FunctionDeclaration', 'Program', '[SEP]']
['[CLS]', 'jit', 'CallExpression', 'ExpressionStatement', 'BlockStatement', 'FunctionDeclaration', 'Program', '[SEP]']
['[CLS]', 'false', 'CallExpression', 'ExpressionStatement', 'BlockStatement', 'FunctionDeclaration', 'Program', '[SEP]']
['[CLS]', 'reportCompare', 'CallExpression', 'ExpressionStatement', 'BlockStatement', 'FunctionDeclaration', 'Program', '[SEP]']
['[CLS]', 'expect', 'CallExpression', 'ExpressionStatement', 'BlockStatement', 'FunctionDeclaration', 'Program', '[SEP]']
['[CLS]', 'actual', 'CallExpression', 'ExpressionStatement', 'BlockStatement', 'FunctionDeclaration', 'Program', '[SEP]']
['[CLS]', 'summary', 'CallExpression', 'ExpressionStatement', 'BlockStatement', 'FunctionDeclaration', 'Program', '[SEP]']
['[CLS]', 'exitFunc', 'CallExpression', 'ExpressionStatement', 'BlockStatement', 'FunctionDeclaration', 'Program', '[SEP]']
